{"cells": [{"cell_type": "markdown", "metadata": {}, "source": ["# Striplog basics"]}, {"cell_type": "markdown", "metadata": {}, "source": ["This notebooks looks at the main `striplog` object. For the basic objects it depends on, see [Basic objects](./02_Basic_objects.ipynb).\n", "\n", "First, import anything we might need."]}, {"cell_type": "code", "execution_count": 1, "metadata": {}, "outputs": [{"data": {"text/plain": ["'0.8.2'"]}, "execution_count": 1, "metadata": {}, "output_type": "execute_result"}], "source": ["import matplotlib.pyplot as plt\n", "%matplotlib inline\n", "\n", "import numpy as np\n", "\n", "import striplog\n", "striplog.__version__\n", "\n", "# If you get a lot of warnings here, try running this block again."]}, {"cell_type": "code", "execution_count": 2, "metadata": {}, "outputs": [], "source": ["from striplog import Legend, Lexicon, Interval, Component"]}, {"cell_type": "code", "execution_count": 3, "metadata": {}, "outputs": [], "source": ["legend = Legend.builtin('NSDOE')\n", "lexicon = Lexicon.default()"]}, {"cell_type": "markdown", "metadata": {}, "source": ["## Making a `striplog`"]}, {"cell_type": "code", "execution_count": 4, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["\n", "    A Striplog is a sequence of intervals.\n", "\n", "    We will build them from LAS files or CSVs.\n", "\n", "    Args:\n", "        list_of_Intervals (list): A list of Interval objects.\n", "        source (str): A source for the data. Default None.\n", "        order (str): 'auto', 'depth', 'elevation', or 'none'. Please refer to\n", "            the documentation for details. Best idea is to let the default\n", "            work. Default: 'auto'.\n", "    \n"]}], "source": ["from striplog import Striplog\n", "print(Striplog.__doc__)"]}, {"cell_type": "markdown", "metadata": {}, "source": ["Here is one of the images we will convert into striplogs:\n", "\n", "<img src=\"M-MG-70_14.3_135.9.png\" width=50 style=\"float:left\" />"]}, {"cell_type": "code", "execution_count": 5, "metadata": {}, "outputs": [], "source": ["imgfile = \"M-MG-70_14.3_135.9.png\""]}, {"cell_type": "code", "execution_count": 6, "metadata": {}, "outputs": [{"name": "stderr", "output_type": "stream", "text": ["/Users/matt/anaconda3/envs/welly/lib/python3.6/site-packages/striplog/striplog.py:868: UserWarning: from_img() is deprecated; please use from_image()\n", "  warnings.warn(w)\n"]}, {"data": {"text/plain": ["Striplog(26 Intervals, start=14.3, stop=135.9)"]}, "execution_count": 6, "metadata": {}, "output_type": "execute_result"}], "source": ["strip = Striplog.from_img(imgfile, 14.3, 135.9, legend=legend)\n", "strip"]}, {"cell_type": "code", "execution_count": 7, "metadata": {}, "outputs": [{"data": {"image/png": "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\n", "text/plain": ["<matplotlib.figure.Figure at 0x10a9a1eb8>"]}, "metadata": {}, "output_type": "display_data"}], "source": ["strip.plot(legend, ladder=True, aspect=5)"]}, {"cell_type": "markdown", "metadata": {}, "source": ["## Representations of a `striplog`"]}, {"cell_type": "markdown", "metadata": {}, "source": ["There are several ways to inspect a striplog:\n", "\n", "* **`print`** prints the contents of the striplog\n", "* **`top`** shows us a list of the primary lithologies in the striplog, in order of cumulative thickness\n", "* **`plot`** makes a plot of the striplog with coloured bars"]}, {"cell_type": "code", "execution_count": 8, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["{'data': {}, 'base': Position({'units': 'm', 'middle': 51.24117647058824}), 'description': '', 'components': [Component({'lithology': 'anhydrite'})], 'top': Position({'units': 'm', 'middle': 14.3})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 54.81764705882354}), 'description': '', 'components': [Component({'lithology': 'sandstone', 'colour': 'grey', 'grainsize': 'vf-f'})], 'top': Position({'units': 'm', 'middle': 51.24117647058824})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 56.55882352941177}), 'description': '', 'components': [Component({'lithology': 'anhydrite'})], 'top': Position({'units': 'm', 'middle': 54.81764705882354})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 58.86470588235295}), 'description': '', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 56.55882352941177})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 60.464705882352945}), 'description': '', 'components': [Component({'lithology': 'siltstone', 'colour': 'red'})], 'top': Position({'units': 'm', 'middle': 58.86470588235295})}\n"]}], "source": ["print(strip[:5])"]}, {"cell_type": "code", "execution_count": 9, "metadata": {}, "outputs": [{"data": {"text/plain": ["[(Component({'lithology': 'siltstone', 'colour': 'grey'}), 46.16470588235293),\n", " (Component({'lithology': 'anhydrite'}), 39.67058823529412),\n", " (Component({'lithology': 'sandstone', 'colour': 'grey', 'grainsize': 'vf-f'}),\n", "  19.200000000000003),\n", " (Component({'lithology': 'dolomite'}), 8.282352941176498),\n", " (Component({'lithology': 'volcanic'}), 4.42352941176469),\n", " (Component({'lithology': 'siltstone', 'colour': 'red'}), 2.7764705882352843),\n", " (Component({'lithology': 'limestone'}), 1.082352941176481)]"]}, "execution_count": 9, "metadata": {}, "output_type": "execute_result"}], "source": ["strip.unique"]}, {"cell_type": "markdown", "metadata": {}, "source": ["It's easy enough to visualize this. Perhaps this should be a method..."]}, {"cell_type": "code", "execution_count": 10, "metadata": {}, "outputs": [{"data": {"image/png": "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\nRU5ErkJggg==\n", "text/plain": ["<matplotlib.figure.Figure at 0x10ea22f98>"]}, "metadata": {}, "output_type": "display_data"}], "source": ["depth = 0\n", "list_of_int = []\n", "for i in strip.unique:\n", "    list_of_int.append(Interval(depth, depth+i[1], components=[i[0]]))\n", "    depth += i[1]\n", "\n", "Striplog(list_of_int).plot(legend, aspect=3)"]}, {"cell_type": "markdown", "metadata": {}, "source": ["## Plot"]}, {"cell_type": "markdown", "metadata": {}, "source": ["If you call `plot()` on a `Striplog` you'll get random colours (one per rock type in the striplog), and preset aspect ratio of 10.  "]}, {"cell_type": "code", "execution_count": 11, "metadata": {}, "outputs": [{"data": {"image/png": "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\n", "text/plain": ["<matplotlib.figure.Figure at 0x102c21198>"]}, "metadata": {}, "output_type": "display_data"}], "source": ["strip.plot()"]}, {"cell_type": "markdown", "metadata": {}, "source": ["For more control, you can pass some parameters. You'll probably always want to pass a legend. "]}, {"cell_type": "code", "execution_count": 12, "metadata": {}, "outputs": [{"data": {"image/png": "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\n", "text/plain": ["<matplotlib.figure.Figure at 0x10ed820f0>"]}, "metadata": {}, "output_type": "display_data"}], "source": ["strip.plot(legend, ladder=True, aspect=5, ticks=5)"]}, {"cell_type": "code", "execution_count": 13, "metadata": {}, "outputs": [{"data": {"image/png": "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\n", "text/plain": ["<matplotlib.figure.Figure at 0x10ee74048>"]}, "metadata": {}, "output_type": "display_data"}], "source": ["hashy_csv = \"\"\"colour,width,hatch,component colour,component grainsize,component lithology\n", "#dddddd,1,---,grey,,siltstone,\n", "#dddddd,2,xxx,,,anhydrite,\n", "#dddddd,3,...,grey,vf-f,sandstone,\n", "#dddddd,4,+--,,,dolomite,\n", "#dddddd,5,ooo,,,volcanic,\n", "#dddddd,6,---,red,,siltstone,\n", "#dddddd,7,,,,limestone,\n", "\"\"\"\n", "hashy = Legend.from_csv(text=hashy_csv)\n", "strip.plot(hashy, ladder=True, aspect=6, lw=1)"]}, {"cell_type": "markdown", "metadata": {}, "source": ["## Manipulating a `striplog`"]}, {"cell_type": "markdown", "metadata": {}, "source": ["Again, the object is indexable and iterable."]}, {"cell_type": "code", "execution_count": 14, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["{'data': {}, 'base': Position({'units': 'm', 'middle': 51.24117647058824}), 'description': '', 'components': [Component({'lithology': 'anhydrite'})], 'top': Position({'units': 'm', 'middle': 14.3})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 54.81764705882354}), 'description': '', 'components': [Component({'lithology': 'sandstone', 'colour': 'grey', 'grainsize': 'vf-f'})], 'top': Position({'units': 'm', 'middle': 51.24117647058824})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 56.55882352941177}), 'description': '', 'components': [Component({'lithology': 'anhydrite'})], 'top': Position({'units': 'm', 'middle': 54.81764705882354})}\n"]}], "source": ["print(strip[:3])"]}, {"cell_type": "code", "execution_count": 15, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["Volcanic\n"]}], "source": ["print(strip[-1].primary.summary())"]}, {"cell_type": "code", "execution_count": 16, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["36.94 m of anhydrite\n", "3.58 m of sandstone, grey, vf-f\n", "1.74 m of anhydrite\n", "2.31 m of dolomite\n", "1.60 m of siltstone, red\n"]}], "source": ["for i in strip[:5]:\n", "    print(i.summary())"]}, {"cell_type": "code", "execution_count": 17, "metadata": {}, "outputs": [{"data": {"text/plain": ["26"]}, "execution_count": 17, "metadata": {}, "output_type": "execute_result"}], "source": ["len(strip)"]}, {"cell_type": "code", "execution_count": 18, "metadata": {}, "outputs": [{"data": {"text/plain": ["array([ 60.46470588,  61.45294118,  62.77058824,  63.94705882,\n", "        64.37058824,  65.07647059,  66.77058824,  71.1       ])"]}, "execution_count": 18, "metadata": {}, "output_type": "execute_result"}], "source": ["import numpy as np\n", "np.array([d.top.z for d in strip[5:13]])"]}, {"cell_type": "markdown", "metadata": {}, "source": ["You can even index into it with an iterable, like a list of indices. The result is a striplog."]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"image/png": "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\n", "text/plain": ["<matplotlib.figure.Figure at 0x10ee2ffd0>"]}, "metadata": {}, "output_type": "display_data"}], "source": ["indices = [2,4,6]\n", "strip[indices].plot(legend, aspect=5)"]}, {"cell_type": "markdown", "metadata": {}, "source": ["## Slicing and indexing"]}, {"cell_type": "markdown", "metadata": {}, "source": ["Slicing returns a new `striplog`:"]}, {"cell_type": "code", "execution_count": 20, "metadata": {}, "outputs": [{"data": {"text/plain": ["Striplog(2 Intervals, start=51.24117647058824, stop=56.55882352941177)"]}, "execution_count": 20, "metadata": {}, "output_type": "execute_result"}], "source": ["strip[1:3]"]}, {"cell_type": "code", "execution_count": 21, "metadata": {}, "outputs": [], "source": ["rock = strip.find('sandstone')[1].components[0]\n", "rock2 = Component({'lithology':'shale', 'colour':'grey'})\n", "iv = Interval(top=300, base=350, description='', components=[rock, rock2])"]}, {"cell_type": "code", "execution_count": 22, "metadata": {}, "outputs": [{"data": {"text/plain": ["Striplog(3 Intervals, start=129.68823529411765, stop=350.0)"]}, "execution_count": 22, "metadata": {}, "output_type": "execute_result"}], "source": ["strip[-3:-1] + Striplog([iv])"]}, {"cell_type": "code", "execution_count": 23, "metadata": {}, "outputs": [{"data": {"image/png": "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\nJDAz/wdwJF/8JL3BzwAAAABJRU5ErkJggg==\n", "text/plain": ["<matplotlib.figure.Figure at 0x10f163d68>"]}, "metadata": {}, "output_type": "display_data"}], "source": ["del strip[4]\n", "\n", "strip.plot(aspect=5)"]}, {"cell_type": "markdown", "metadata": {}, "source": ["## Read or write CSV or LAS3"]}, {"cell_type": "code", "execution_count": 24, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["~Lithology_Parameter\n", "LITH .   Striplog         : Lithology source          {S}\n", "LITHD.   MD               : Lithology depth reference {S}\n", "\n", "~Lithology_Definition\n", "LITHT.M                   : Lithology top depth       {F}\n", "LITHB.M                   : Lithology base depth      {F}\n", "LITHD.                    : Lithology description     {S}\n", "\n", "~Lithology_Data | Lithology_Definition\n", "14.3,51.24117647058824,Anhydrite\r\n", "51.24117647058824,54.81764705882354,\"Sandstone, grey, vf-f\"\r\n", "54.81764705882354,56.55882352941177,Anhydrite\r\n", "56.55882352941177,58.86470588235295,Dolomite\r\n", "60.464705882352945,61.45294117647059,Anhydrite\r\n", "61.45294117647059,62.77058823529413,\"Sandstone, grey, vf-f\"\r\n", "62.77058823529413,63.94705882352942,\"Siltstone, red\"\r\n", "63.94705882352942,64.37058823529412,Dolomite\r\n", "64.37058823529412,65.0764705882353,\"Siltstone, grey\"\r\n", "65.0764705882353,66.77058823529413,Dolomite\r\n", "66.77058823529413,71.10000000000001,\"Sandstone, grey, vf-f\"\r\n", "71.10000000000001,71.80588235294118,Dolomite\r\n", "71.80588235294118,81.78235294117647,\"Sandstone, grey, vf-f\"\r\n", "81.78235294117647,85.78235294117647,\"Siltstone, grey\"\r\n", "85.78235294117647,87.00588235294119,Dolomite\r\n", "87.00588235294119,88.51176470588236,\"Siltstone, grey\"\r\n", "88.51176470588236,88.98235294117647,Dolomite\r\n", "88.98235294117647,95.9,\"Siltstone, grey\"\r\n", "95.9,96.2764705882353,Dolomite\r\n", "96.2764705882353,104.37058823529412,\"Siltstone, grey\"\r\n", "104.37058823529412,104.74705882352941,Dolomite\r\n", "104.74705882352941,129.68823529411765,\"Siltstone, grey\"\r\n", "129.68823529411765,130.39411764705883,Dolomite\r\n", "130.39411764705883,131.47647058823532,Limestone\r\n", "131.47647058823532,135.9,Volcanic\r\n", "\n"]}], "source": ["print(strip.to_las3())"]}, {"cell_type": "code", "execution_count": 25, "metadata": {}, "outputs": [{"data": {"text/plain": ["'Image'"]}, "execution_count": 25, "metadata": {}, "output_type": "execute_result"}], "source": ["strip.source"]}, {"cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [], "source": ["csv_string = \"\"\"top, base, lithology\n", "  200.000,  230.329,  Anhydrite                                       \n", "  230.329,  233.269,  Grey vf-f sandstone                             \n", "  233.269,  234.700,  Anhydrite                                       \n", "  234.700,  236.596,  Dolomite                                        \n", "  236.596,  237.911,  Red siltstone                                   \n", "  237.911,  238.723,  Anhydrite                                       \n", "  238.723,  239.807,  Grey vf-f sandstone                             \n", "  239.807,  240.774,  Red siltstone                                   \n", "  240.774,  241.122,  Dolomite                                        \n", "  241.122,  241.702,  Grey siltstone                                  \n", "  241.702,  243.095,  Dolomite                                        \n", "  243.095,  246.654,  Grey vf-f sandstone                             \n", "  246.654,  247.234,  Dolomite                                        \n", "  247.234,  255.435,  Grey vf-f sandstone                             \n", "  255.435,  258.723,  Grey siltstone                                  \n", "  258.723,  259.729,  Dolomite                                        \n", "  259.729,  260.967,  Grey siltstone                                  \n", "  260.967,  261.354,  Dolomite                                        \n", "  261.354,  267.041,  Grey siltstone                                  \n", "  267.041,  267.350,  Dolomite                                        \n", "  267.350,  274.004,  Grey siltstone                                  \n", "  274.004,  274.313,  Dolomite                                        \n", "  274.313,  294.816,  Grey siltstone                                  \n", "  294.816,  295.397,  Dolomite                                        \n", "  295.397,  296.286,  Limestone                                       \n", "  296.286,  300.000,  Volcanic                                        \n", "\"\"\""]}, {"cell_type": "code", "execution_count": 27, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["{'lithology': ['Anhydrite', 'Grey vf-f sandstone', 'Anhydrite', 'Dolomite', 'Red siltstone', 'Anhydrite', 'Grey vf-f sandstone', 'Red siltstone', 'Dolomite', 'Grey siltstone', 'Dolomite', 'Grey vf-f sandstone', 'Dolomite', 'Grey vf-f sandstone', 'Grey siltstone', 'Dolomite', 'Grey siltstone', 'Dolomite', 'Grey siltstone', 'Dolomite', 'Grey siltstone', 'Dolomite', 'Grey siltstone', 'Dolomite', 'Limestone', 'Volcanic'], 'base': [230.329, 233.269, 234.7, 236.596, 237.911, 238.723, 239.807, 240.774, 241.122, 241.702, 243.095, 246.654, 247.234, 255.435, 258.723, 259.729, 260.967, 261.354, 267.041, 267.35, 274.004, 274.313, 294.816, 295.397, 296.286, 300.0], 'top': [200.0, 230.329, 233.269, 234.7, 236.596, 237.911, 238.723, 239.807, 240.774, 241.122, 241.702, 243.095, 246.654, 247.234, 255.435, 258.723, 259.729, 260.967, 261.354, 267.041, 267.35, 274.004, 274.313, 294.816, 295.397, 296.286]}\n"]}], "source": ["strip2 = Striplog.from_csv(text=csv_string, lexicon=lexicon)"]}, {"cell_type": "markdown", "metadata": {}, "source": ["Notice the warning about a missing term in the lexicon."]}, {"cell_type": "code", "execution_count": 28, "metadata": {}, "outputs": [{"data": {"text/html": ["<table><tr><td><strong>lithology</strong></td><td>sandstone</td></tr><tr><td><strong>colour</strong></td><td>grey</td></tr><tr><td><strong>grainsize</strong></td><td>vf-f</td></tr></table>"], "text/plain": ["Component({'lithology': 'sandstone', 'colour': 'grey', 'grainsize': 'vf-f'})"]}, "execution_count": 28, "metadata": {}, "output_type": "execute_result"}], "source": ["Component.from_text('Grey vf-f sandstone', lexicon)"]}, {"cell_type": "code", "execution_count": 29, "metadata": {}, "outputs": [], "source": ["las3 = \"\"\"~Lithology_Parameter\n", "LITH .                    : Lithology source          {S}\n", "LITHD.   MD               : Lithology depth reference {S}\n", "\n", "~Lithology_Definition\n", "LITHT.M                   : Lithology top depth       {F}\n", "LITHB.M                   : Lithology base depth      {F}\n", "LITHN.                    : Lithology name            {S}\n", "\n", "~Lithology_Data | Lithology_Definition\n", "  200.000,  230.329,  Anhydrite                                       \n", "  230.329,  233.269,  Grey vf-f sandstone                             \n", "  233.269,  234.700,  Anhydrite                                       \n", "  234.700,  236.596,  Dolomite                                        \n", "  236.596,  237.911,  Red siltstone                                   \n", "  237.911,  238.723,  Anhydrite                                       \n", "  238.723,  239.807,  Grey vf-f sandstone                             \n", "  239.807,  240.774,  Red siltstone                                   \n", "  240.774,  241.122,  Dolomite                                        \n", "  241.122,  241.702,  Grey siltstone                                  \n", "  241.702,  243.095,  Dolomite                                        \n", "  243.095,  246.654,  Grey vf-f sandstone                             \n", "  246.654,  247.234,  Dolomite                                        \n", "  247.234,  255.435,  Grey vf-f sandstone                             \n", "  255.435,  258.723,  Grey siltstone                                  \n", "  258.723,  259.729,  Dolomite                                        \n", "  259.729,  260.967,  Grey siltstone                                  \n", "  260.967,  261.354,  Dolomite                                        \n", "  261.354,  267.041,  Grey siltstone                                  \n", "  267.041,  267.350,  Dolomite                                        \n", "  267.350,  274.004,  Grey siltstone                                  \n", "  274.004,  274.313,  Dolomite                                        \n", "  274.313,  294.816,  Grey siltstone                                  \n", "  294.816,  295.397,  Dolomite                                        \n", "  295.397,  296.286,  Limestone                                       \n", "  296.286,  300.000,  Volcanic                                        \n", "\"\"\""]}, {"cell_type": "code", "execution_count": 30, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["{'data': {}, 'base': Position({'units': 'm', 'middle': 230.329}), 'description': 'Anhydrite', 'components': [Component({'lithology': 'anhydrite'})], 'top': Position({'units': 'm', 'middle': 200.0})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 233.269}), 'description': 'Grey vf-f sandstone', 'components': [Component({'lithology': 'sandstone', 'colour': 'grey', 'grainsize': 'vf-f'})], 'top': Position({'units': 'm', 'middle': 230.329})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 234.7}), 'description': 'Anhydrite', 'components': [Component({'lithology': 'anhydrite'})], 'top': Position({'units': 'm', 'middle': 233.269})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 236.596}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 234.7})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 237.911}), 'description': 'Red siltstone', 'components': [Component({'lithology': 'siltstone', 'colour': 'red'})], 'top': Position({'units': 'm', 'middle': 236.596})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 238.723}), 'description': 'Anhydrite', 'components': [Component({'lithology': 'anhydrite'})], 'top': Position({'units': 'm', 'middle': 237.911})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 239.807}), 'description': 'Grey vf-f sandstone', 'components': [Component({'lithology': 'sandstone', 'colour': 'grey', 'grainsize': 'vf-f'})], 'top': Position({'units': 'm', 'middle': 238.723})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 240.774}), 'description': 'Red siltstone', 'components': [Component({'lithology': 'siltstone', 'colour': 'red'})], 'top': Position({'units': 'm', 'middle': 239.807})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 241.122}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 240.774})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 241.702}), 'description': 'Grey siltstone', 'components': [Component({'lithology': 'siltstone', 'colour': 'grey'})], 'top': Position({'units': 'm', 'middle': 241.122})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 243.095}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 241.702})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 246.654}), 'description': 'Grey vf-f sandstone', 'components': [Component({'lithology': 'sandstone', 'colour': 'grey', 'grainsize': 'vf-f'})], 'top': Position({'units': 'm', 'middle': 243.095})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 247.234}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 246.654})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 255.435}), 'description': 'Grey vf-f sandstone', 'components': [Component({'lithology': 'sandstone', 'colour': 'grey', 'grainsize': 'vf-f'})], 'top': Position({'units': 'm', 'middle': 247.234})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 258.723}), 'description': 'Grey siltstone', 'components': [Component({'lithology': 'siltstone', 'colour': 'grey'})], 'top': Position({'units': 'm', 'middle': 255.435})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 259.729}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 258.723})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 260.967}), 'description': 'Grey siltstone', 'components': [Component({'lithology': 'siltstone', 'colour': 'grey'})], 'top': Position({'units': 'm', 'middle': 259.729})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 261.354}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 260.967})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 267.041}), 'description': 'Grey siltstone', 'components': [Component({'lithology': 'siltstone', 'colour': 'grey'})], 'top': Position({'units': 'm', 'middle': 261.354})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 267.35}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 267.041})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 274.004}), 'description': 'Grey siltstone', 'components': [Component({'lithology': 'siltstone', 'colour': 'grey'})], 'top': Position({'units': 'm', 'middle': 267.35})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 274.313}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 274.004})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 294.816}), 'description': 'Grey siltstone', 'components': [Component({'lithology': 'siltstone', 'colour': 'grey'})], 'top': Position({'units': 'm', 'middle': 274.313})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 295.397}), 'description': 'Dolomite', 'components': [Component({'lithology': 'dolomite'})], 'top': Position({'units': 'm', 'middle': 294.816})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 296.286}), 'description': 'Limestone', 'components': [Component({'lithology': 'limestone'})], 'top': Position({'units': 'm', 'middle': 295.397})}\n", "{'data': {}, 'base': Position({'units': 'm', 'middle': 300.0}), 'description': 'Volcanic', 'components': [Component({})], 'top': Position({'units': 'm', 'middle': 296.286})}\n"]}], "source": ["strip3 = Striplog.from_las3(las3, lexicon)\n", "print(strip3)"]}, {"cell_type": "markdown", "metadata": {}, "source": ["<hr />\n", "\n", "<p style=\"color:gray\">\u00a92015 Agile Geoscience. Licensed CC-BY. <a href=\"https://github.com/agile-geoscience/striplog\">striplog.py</a></p>"]}], "metadata": {"kernelspec": {"display_name": "Python 3 (ipykernel)", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.6.4"}}, "nbformat": 4, "nbformat_minor": 1}